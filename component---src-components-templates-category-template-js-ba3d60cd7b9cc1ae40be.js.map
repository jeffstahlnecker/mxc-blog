{"version":3,"sources":["webpack:///./src/components/Globals/LocalSettings.js","webpack:///./src/components/Templates/Category-Template.js","webpack:///./src/components/Categories.js","webpack:///./src/components/Categories.module.css"],"names":["localeSettings","en","name","categoryPropName","slugPropName","relativePath","hant","hans","ko","Grid","styled","div","media","tablet","setRem","FeaturedRow","setFont","setColor","mainBlack","portraitTablet","laptop","Title","CategoryTemplate","data","pageContext","lang","locl","category","today","useState","activePage","setactivePage","edges","slice","datToDisplay","setdatToDisplay","Layout","categories","nodes","map","item","key","id","SEO","title","pageUrl","Categories","post","slug","length","node","enPost","PostRow","heading","text","metaDescription","image","featuredImage","childImageSharp","fluid","file","date","Line","color","lightGrey","style","display","justifyContent","itemClass","linkClass","itemsCountPerPage","totalItemsCount","totalCount","pageRangeDisplayed","onChange","pageNumber","start","end","PureCategories","url","links","isOpen","setNav","FlexBox","MobileMenu","type","onClick","StyledMenu","className","styles","show","hide","catList","includes","koCategory","zhchCategory","zhtwCategory","catSlug","MenuItem","to","setFlex","button","ul","secondaryColor","li","props","window","location","href","useStaticQuery","module","exports"],"mappings":"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","file":"component---src-components-templates-category-template-js-ba3d60cd7b9cc1ae40be.js","sourcesContent":["export const localeSettings = {\n  en: {\n    name: \"en\",\n    categoryPropName: \"category\",\n    slugPropName: \"slug\",\n    relativePath: \"\",\n  },\n  hant: {\n    name: \"hant\",\n    categoryPropName: \"zhtwCategory\",\n    slugPropName: \"zhtwSlug\",\n    relativePath: \"zh-hant/\",\n  },\n  hans: {\n    name: \"hans\",\n    categoryPropName: \"zhchCategory\",\n    slugPropName: \"zhchSlug\",\n    relativePath: \"zh-hans/\",\n  },\n  ko: {\n    name: \"ko\",\n    categoryPropName: \"koCategory\",\n    slugPropName: \"koSlug\",\n    relativePath: \"ko/\",\n  },\n}\n","import React, { useEffect, useState } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport Pagination from \"react-js-pagination\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Layout from \"../Layout\"\nimport Line from \"../Globals/Line\"\nimport { setColor, setRem, setFont, media } from \"../../styles\"\nimport PostRow from \"../Globals/PostRow\"\nimport SEO from \"../Globals/SEO\"\nimport { localeSettings } from \"../Globals/LocalSettings\"\nimport Categories from \"../Categories\"\n\n\nconst CategoryTemplate = ({\n  data,\n  pageContext: { lang = \"en\", category, today },\n}) => {\n  const locl = localeSettings[lang]\n  const [activePage, setactivePage] = useState(0);\n  const [datToDisplay, setdatToDisplay] = useState(data[lang].edges.slice(0, 10));\n\n  const handlePageChange = (pageNumber) => {\n    const start = (pageNumber - 1) * 10;\n    const end = start + 10;\n    setdatToDisplay(data[lang].edges.slice(start, end));\n    setactivePage(pageNumber);\n\n  }\n\n  return (\n    <Layout>\n      {data.categories.nodes.map(item => {\n        return (\n          <div key={item.id}>\n            <SEO\n              title={item[locl.categoryPropName]}\n              pageUrl={`https://blog.mxc.org/${item[locl.slugPropName]}`}\n            />\n            <Grid>\n              <div />\n\n              <FeaturedRow>\n                \n                  \n                  <Title>\n                    <h1>{item[locl.categoryPropName]}</h1>\n                  </Title>\n                \n                <Categories />\n                {datToDisplay.map(post => {\n                  let slug = \"\"\n                  if (data[lang].edges.length > 0) {\n                    slug =\n                      lang === \"en\"\n                        ? post.node.post.slug\n                        : post.node.enPost.post.slug\n                  }\n                  return (\n                    <div key={post.node.id}>\n                      <PostRow\n                        heading={post.node.title}\n                        text={\n                          post.node.post.metaDescription\n                            ? post.node.post.metaDescription\n                            : \"\"\n                        }\n                        image={\n                          post.node.featuredImage !== null\n                            ? post.node.featuredImage.childImageSharp.fluid\n                            : data.file.childImageSharp.fluid\n                        }\n                        slug={`${locl.relativePath}${slug}`}\n                        date={post.node.post.date}\n                      />\n                      <Line color={setColor.lightGrey} />\n                    </div>\n                  )\n                })}\n              </FeaturedRow>\n              <div />\n            </Grid>\n          </div>\n        )\n      })}\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <Pagination\n          itemClass=\"page-item\"\n          linkClass=\"page-link\"\n          activePage={activePage}\n          itemsCountPerPage={10}\n          totalItemsCount={data[lang].totalCount}\n          pageRangeDisplayed={5}\n          onChange={handlePageChange}\n        />\n      </div>\n    </Layout >\n  )\n}\n\nconst Grid = styled.div`\n  ${media.tablet`  display: grid;\n  grid-template-columns: 10vw 80vw 10vw;\n  column-gap: ${setRem(5)};`};\n`\n\nconst FeaturedRow = styled.div`\n  padding: 0 2vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  h1 {\n    text-align: center;\n    margin: 20px 0;\n    ${setFont}\n    font-size: ${setRem(38)};\n    color: ${setColor.mainBlack};\n  }\n  .img {\n    height: 244px;\n  }\n  ${media.portraitTablet`\n  .img {\n    height: 344px;\n  }`}\n  ${media.tablet`\n   .img {\n    height: 488px;\n  `}\n  ${media.laptop`.img{height:100px;}`}\n`\n\nconst Title = styled.div`\n  border-top: 3px solid ${setColor.mainBlack};\n  margin-top: ${setRem(40)};\n  ${media.laptop`\n    border-top: 3px solid ${setColor.mainBlack}; \n    width: 15vw;\n    margin-top: ${setRem(80)};`};\n`\n\nexport const query = graphql`\n  query($category: String!, $today: Date!) {\n    en: allStrapiPosts(\n      sort: { order: DESC, fields: date }\n      filter: { category: { slug: { eq: $category } }, date: { lte: $today } }\n    ) {\n      edges {\n        node {\n          id\n          post {\n            metaDescription\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          featuredImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              }\n            }\n          }\n          category {\n            category\n          }\n          title\n        }\n      }\n      totalCount\n    }\n    hans: allStrapiZhchPosts(\n      sort: { order: DESC, fields: date }\n      filter: {\n        category: { slug: { eq: $category } }\n        enPost: { post: { slug: { ne: null } } }\n        date: { lte: $today }\n      }\n    ) {\n      edges {\n        node {\n          id\n          post {\n            metaDescription\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          enPost {\n            post {\n              slug\n            }\n          }\n          featuredImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              }\n            }\n          }\n          category {\n            category\n          }\n          title\n        }\n      }\n      totalCount\n    }\n    hant: allStrapiZhtwPosts(\n      sort: { order: DESC, fields: date }\n      filter: {\n        category: { slug: { eq: $category } }\n        enPost: { post: { slug: { ne: null } } }\n        date: { lte: $today }\n      }\n    ) {\n      edges {\n        node {\n          id\n          post {\n            metaDescription\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          enPost {\n            post {\n              slug\n            }\n          }\n          featuredImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              }\n            }\n          }\n          category {\n            category\n          }\n          title\n        }\n      }\n      totalCount\n    }\n    ko: allStrapiKoPosts(\n      sort: { order: DESC, fields: date }\n      filter: {\n        category: { slug: { eq: $category } }\n        enPost: { post: { slug: { ne: null } } }\n        date: { lte: $today }\n      }\n    ) {\n      edges {\n        node {\n          id\n          post {\n            metaDescription\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n          enPost {\n            post {\n              slug\n            }\n          }\n          featuredImage {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid_withWebp_tracedSVG\n              }\n            }\n          }\n          category {\n            category\n          }\n          title\n        }\n      }\n      totalCount\n    }\n    categories: allStrapiCategories(filter: { slug: { eq: $category } }) {\n      nodes {\n        category\n        zhchCategory\n        zhchSlug\n        zhtwCategory\n        zhtwSlug\n        koSlug\n        koCategory\n        slug\n        id\n      }\n    }\n    file(relativePath: { eq: \"defaultImg.png\" }) {\n      childImageSharp {\n        fluid {\n          src\n        }\n      }\n    }\n  }\n`\n\nexport default CategoryTemplate\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql, useStaticQuery, Link } from \"gatsby\"\nimport { FaAngleDown } from \"react-icons/fa\"\nimport styles from \"./Categories.module.css\"\n\nimport { media, setColor, setRem, setFlex } from \"../styles\"\n\n// eslint-disable-next-line react/prop-types\nexport const PureCategories = ({ data, url }) => {\n  const links = data\n  const [isOpen, setNav] = useState(false)\n  const toggleNav = () => {\n    // eslint-disable-next-line no-shadow\n    setNav(isOpen => !isOpen)\n  }\n\n  return (\n    <div>\n      <FlexBox>\n        <MobileMenu type=\"button\" onClick={toggleNav}>\n          Categories <FaAngleDown />\n        </MobileMenu>\n      </FlexBox>\n      <StyledMenu className={isOpen ? `${styles.show}` : `${styles.hide}`}>\n        {links.categories.nodes.map(item => {\n          const catList = url.includes(\"/ko\")\n            ? item.koCategory\n            : url.includes(\"/zh-hans\")\n            ? item.zhchCategory\n            : url.includes(\"/zh-hant\")\n            ? item.zhtwCategory\n            : item.category\n\n          const catSlug = url.includes(\"/ko\")\n            ? `/ko/categories/${item.slug}`\n            : url.includes(\"/zh-hans\")\n            ? `/zh-hans/categories/${item.slug}`\n            : url.includes(\"/zh-hant\")\n            ? `/zh-hant/categories/${item.slug}`\n            : `/categories/${item.slug}`\n\n          return (\n            <MenuItem key={catSlug}>\n              <Link to={`${catSlug}`}>{catList}</Link>\n            </MenuItem>\n          )\n        })}\n      </StyledMenu>\n    </div>\n  )\n}\nexport const Categories = props => {\n  const url = typeof window !== `undefined` ? window.location.href : \"/\"\n  const data = useStaticQuery(graphql`\n    query {\n      categories: allStrapiCategories {\n        nodes {\n          slug\n          category\n          zhtwCategory\n          zhtwSlug\n          koCategory\n          koSlug\n          zhchCategory\n          zhchSlug\n        }\n      }\n    }\n  `)\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <PureCategories {...props} data={data} url={url} />\n}\n\nexport const FlexBox = styled.div`\n  ${setFlex}\n`\n\nexport const MobileMenu = styled.button`\n  color: ${setColor.mainBlack};\n  background-color: transparent;\n  margin-top: 1rem;\n  border: none;\n  outline: none;\n  font-size: ${setRem(14)};\n  order: 99;\n  cursor: pointer;\n  ${media.tablet`display:none;`};\n`\n\nexport const StyledMenu = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 3rem 0 0 0;\n  align-items: center;\n  padding: 0;\n  justify-content: flex-start;\n  flex: 4;\n  font-weight: 500;\n  flex-direction: column;\n  height: 0;\n  overflow: hidden;\n  transition: all 0.3s linear;\n  a {\n    text-decoration: none;\n    color: ${setColor.mainBlack};\n  }\n  a:hover {\n    text-decoration: none;\n    color: ${setColor.secondaryColor};\n  }\n  ${media.tablet`\n\tflex-direction:row;\n\theight: auto;\n\tmargin: 0 0 0 0;\n\t`};\n`\nexport const MenuItem = styled.li`\n  padding: 1rem 2rem;\n`\n\nexport default Categories\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"Categories-module--show--3O9Tu\",\"hide\":\"Categories-module--hide--2KBxy\"};"],"sourceRoot":""}