{"version":3,"sources":["webpack:///./src/components/Globals/DisplayImage.js","webpack:///./src/components/Globals/PostRow.js","webpack:///./src/components/Categories.js","webpack:///./src/components/Globals/Title.js","webpack:///./src/components/Globals/Category.js","webpack:///./src/components/KoPosts.js","webpack:///./src/pages/ko.js","webpack:///./src/components/Categories.module.css","webpack:///./src/components/Globals/Section.js"],"names":["styled","className","img","data","width","useStaticQuery","fluid","defaultImg","childImageSharp","props","Center","div","setColor","mainBlack","setRem","media","laptop","setBorder","color","primaryColor","imageWidth","Category","mainGrey","Date","PostRow","text","heading","image","slug","featured","category","date","Section","to","Title","title","PureCategories","links","useState","isOpen","setNav","url","window","location","href","FlexBox","MobileMenu","type","onClick","StyledMenu","styles","show","hide","categories","nodes","map","item","catList","includes","koCategory","zhchCategory","zhtwCategory","catSlug","MenuItem","key","setFlex","button","tablet","ul","secondaryColor","li","Categories","align","setLetterSpacing","setFont","main","Cat","More","setTransition","children","Grid","FeaturedRow","Posts","newsUpdate","events","furtherReading","technology","pressRelease","file","useCase","id","post","metaDescription","enPost","featuredImage","undefined","Line","lightGrey","Layout","SEO","language","description","koPost","hansPost","hantPost","module","exports","section"],"mappings":"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","file":"component---src-pages-ko-js-88509773c4af181dd87a.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst getImage = graphql`\n  {\n    defaultImg: file(relativePath: { eq: \"defaultImg.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_withWebp_tracedSVG\n        }\n      }\n    }\n  }\n`\n\nconst DisplayImage = ({ className, img, width }) => {\n  const data = useStaticQuery(getImage)\n\n  return (\n    <Img\n      fluid={img || data.defaultImg.childImageSharp.fluid}\n      className={className}\n    />\n  )\n}\n\nexport default styled(DisplayImage)`\n  width: ${props => props.width};\n  min-height: 100%;\n`\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport Section from \"./Section\"\nimport Title from \"./Title\"\nimport { setRem, setBorder, setColor, media } from \"../../styles\"\nimport DisplayImage from \"./DisplayImage\"\n\nconst PostRow = ({ text, heading, image, slug, featured, category, date }) => {\n  return (\n    <Section>\n      <Link to={`/${slug}`}>\n        <Center imageWidth={featured ? `50vw` : `25vw`}>\n          <DisplayImage className=\"img\" img={image} />\n\n          <div className=\"info\">\n            <Title\n              title={heading}\n              className={featured ? `featured` : \"normal\"}\n            />\n            <p>{text}</p>\n            <Category>{featured ? `${category}` : null}</Category>\n            <Date>{date}</Date>\n          </div>\n        </Center>\n      </Link>\n    </Section>\n  )\n}\n\nconst Center = styled.div`\n  h3 {\n    color: ${setColor.mainBlack};\n  }\n  .img,\n  .info {\n    padding: ${setRem(15)};\n    ${media.laptop`\n       padding: ${setRem(30)};`}\n  }\n  .img {\n    display: block;\n    ${setBorder({ width: setRem(0), color: setColor.primaryColor })}\n  }\n  .featured {\n    margin-bottom: ${setRem(30)};\n    ${media.laptop`margin-bottom: ${setRem(76)};`}\n  }\n  .normal {\n    margin-bottom: ${setRem(20)};\n    font-size: ${setRem(24)};\n  }\n  .info {\n    p {\n      line-height: 20px;\n      font-size: ${setRem(16)};\n      color: ${setColor.mainBlack};\n    }\n  }\n  width: 90vw;\n  margin: 0 auto;\n\n  ${media.laptop`\n  width: 100vw;\n  max-width: ${setRem(1170)};\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-column-gap: ${setRem(32)};\n  .img {\n    align-self: center;\n    width: ${props => props.imageWidth};\n  }\n  .info {\n\n  }\n  a {\n    text-decoration: none;\n  }\n  ]\n  `}\n`\nexport const Category = styled.div`\n  color: ${setColor.mainGrey};\n  font-size: ${setRem(16)};\n  font-weight: 700;\n  margin-top: ${setRem(44)};\n  ${media.laptop``}\n`\n\nexport const Date = styled.div`\n  font-size: ${setRem(14)};\n  color: ${setColor.mainGrey};\n`\n\nexport default PostRow\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql, useStaticQuery, Link } from \"gatsby\"\nimport { FaAngleDown } from \"react-icons/fa\"\nimport styles from \"./Categories.module.css\"\n\nimport { media, setColor, setRem, setFlex } from \"../styles\"\n\n// eslint-disable-next-line react/prop-types\nexport const PureCategories = ({ data }) => {\n  const links = data\n  const [isOpen, setNav] = useState(false)\n  const toggleNav = () => {\n    // eslint-disable-next-line no-shadow\n    setNav(isOpen => !isOpen)\n  }\n  const url = typeof window !== `undefined` ? window.location.href : \"/\"\n\n  return (\n    <div>\n      <FlexBox>\n        <MobileMenu type=\"button\" onClick={toggleNav}>\n          Categories <FaAngleDown />\n        </MobileMenu>\n      </FlexBox>\n      <StyledMenu className={isOpen ? `${styles.show}` : `${styles.hide}`}>\n        {links.categories.nodes.map(item => {\n          const catList = url.includes(\"/ko\")\n            ? item.koCategory\n            : url.includes(\"/zh-hans\")\n            ? item.zhchCategory\n            : url.includes(\"/zh-hant\")\n            ? item.zhtwCategory\n            : item.category\n\n          const catSlug = `categories/${item.slug}`\n          return (\n            <MenuItem key={catSlug}>\n              <Link to={`${catSlug}`}>{catList}</Link>\n            </MenuItem>\n          )\n        })}\n      </StyledMenu>\n    </div>\n  )\n}\nexport const Categories = props => {\n  const data = useStaticQuery(graphql`\n    query {\n      categories: allStrapiCategories {\n        nodes {\n          slug\n          category\n          zhtwCategory\n          zhtwSlug\n          koCategory\n          koSlug\n          zhchCategory\n          zhchSlug\n        }\n      }\n    }\n  `)\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <PureCategories {...props} data={data} />\n}\n\nexport const FlexBox = styled.div`\n  ${setFlex}\n`\n\nexport const MobileMenu = styled.button`\n  color: ${setColor.mainBlack};\n  background-color: transparent;\n  margin-top: 1rem;\n  border: none;\n  outline: none;\n  font-size: ${setRem(14)};\n  order: 99;\n  cursor: pointer;\n  ${media.tablet`display:none;`};\n`\n\nexport const StyledMenu = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 3rem 0 0 0;\n  align-items: center;\n  padding: 0;\n  justify-content: flex-start;\n  flex: 4;\n  font-weight: 500;\n  flex-direction: column;\n  height: 0;\n  overflow: hidden;\n  transition: all 0.3s linear;\n  a {\n    text-decoration: none;\n    color: ${setColor.mainBlack};\n  }\n  a:hover {\n    text-decoration: none;\n    color: ${setColor.secondaryColor};\n  }\n  ${media.tablet`\n\tflex-direction:row;\n\theight: auto;\n\tmargin: 0 0 0 0;\n\t`};\n`\nexport const MenuItem = styled.li`\n  padding: 1rem 2rem;\n`\n\nexport default Categories\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { setRem, setFont, setLetterSpacing } from \"../../styles\"\n\nconst Title = ({ className, title, align }) => {\n  return <h3 className={className}>{title}</h3>\n}\n\nexport default styled(Title)`\n  font-size: ${setRem(32)};\n  text-transform: capitalize;\n  ${setLetterSpacing(3)};\n  ${setFont.main};\n  text-align: ${props => props.align || \"left\"};\n`\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FaChevronRight } from \"react-icons/fa\"\nimport { Link } from \"gatsby\"\nimport Section from \"./Section\"\nimport Title from \"./Title\"\nimport { setRem, setColor, setTransition, media } from \"../../styles\"\n\nconst Category = ({ children, category, url }) => {\n  return (\n    <Section>\n      <Cat>\n        <Title title={category} />\n\n        <More>\n          <Link to={url} className=\"button\">\n            <p>See more in {category}</p>\n            <FaChevronRight className=\"icon\" />\n          </Link>\n        </More>\n      </Cat>\n      {children}\n    </Section>\n  )\n}\n\nexport const Cat = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${setRem(30)};\n  ${media.laptop`flex-direction: row;`}\n`\nexport const More = styled.div`\n  .button {\n    display: flex;\n    flex-direction: row;\n    color: ${setColor.mainBlack};\n  }\n  .button:hover {\n    color: ${setColor.secondaryColor};\n    ${setTransition}\n  }\n  .icon {\n    padding-left: ${setRem(10)};\n  }\n`\n\nexport default Category\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { setColor, setRem, setFont, media } from \"../styles\"\nimport Line from \"./Globals/Line\"\nimport Categories from \"./Categories\"\nimport PostRow from \"./Globals/PostRow\"\nimport Category from \"./Globals/Category\"\n\nconst getPosts = graphql`\n  {\n    featured: allStrapiKoPosts(\n      sort: { order: DESC, fields: post___date }\n      filter: {\n        post: { featured: { eq: true }, publish: { eq: true } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        id\n        date(formatString: \"MMMM DD, YYYY\")\n        author {\n          author\n          slug\n        }\n        category {\n          category\n          slug\n        }\n        post {\n          date(formatString: \"MMMM DD, YYYY\")\n          metaDescription\n          featured\n          publish\n          slug\n          video\n        }\n        tags {\n          tag\n          slug\n        }\n        title\n        enPost {\n          post {\n            slug\n          }\n        }\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    newsUpdate: allStrapiKoPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: {\n        category: { slug: { eq: \"news-update\" } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        enPost {\n          post {\n            slug\n          }\n        }\n        id\n      }\n    }\n    events: allStrapiKoPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: {\n        category: { slug: { eq: \"events\" } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        enPost {\n          post {\n            slug\n          }\n        }\n        id\n      }\n    }\n    furtherReading: allStrapiKoPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: {\n        category: { slug: { eq: \"further-reading\" } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        enPost {\n          post {\n            slug\n          }\n        }\n        id\n      }\n    }\n    technology: allStrapiKoPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: {\n        category: { slug: { eq: \"technology\" } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        enPost {\n          post {\n            slug\n          }\n        }\n        id\n      }\n    }\n    pressRelease: allStrapiKoPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: {\n        category: { slug: { eq: \"press-release\" } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        enPost {\n          post {\n            slug\n          }\n        }\n        id\n      }\n    }\n    useCase: allStrapiKoPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: {\n        category: { slug: { eq: \"use-case\" } }\n        enPost: { post: { slug: { ne: null } } }\n      }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        enPost {\n          post {\n            slug\n          }\n        }\n        id\n      }\n    }\n    categories: allStrapiCategories(\n      filter: { posts: { elemMatch: { post: { publish: { eq: true } } } } }\n    ) {\n      nodes {\n        category\n        slug\n        koSlug\n        koCategory\n      }\n    }\n    file(relativePath: { eq: \"defaultImg.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_withWebp_tracedSVG\n        }\n      }\n    }\n  }\n`\n\nconst Posts = () => {\n  const {\n    newsUpdate: { nodes: newsUpdate },\n    featured: { nodes: featured },\n    events: { nodes: events },\n    furtherReading: { nodes: furtherReading },\n    technology: { nodes: technology },\n    pressRelease: { nodes: pressRelease },\n    file: { childImageSharp: file },\n    useCase: { nodes: useCase },\n  } = useStaticQuery(getPosts)\n\n  return (\n    <Grid>\n      <div />\n      <FeaturedRow>\n        <Title>\n          <h1>Blog</h1>\n        </Title>\n        <Categories />\n        {featured.map(item => {\n          return (\n            <div key={item.id}>\n              <PostRow\n                heading={item.title}\n                text={item.post.metaDescription}\n                slug={`ko/${item.enPost.post.slug}`}\n                image={\n                  item.featuredImage === null\n                    ? file.fluid\n                    : item.featuredImage === undefined\n                    ? file.fluid\n                    : item.featuredImage.childImageSharp.fluid\n                }\n                category={item.category.koCategory}\n                date={item.date}\n                featured\n              />\n              <Line color={setColor.lightGrey} />\n            </div>\n          )\n        })}\n\n        <Category category=\"News Update\" url=\"/categories/news-update\">\n          {newsUpdate.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={`ko/${data.enPost.post.slug}`}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Events\" url=\"/categories/events\">\n          {events.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={`ko/${data.enPost.post.slug}`}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Further Reading\" url=\"/categories/further-reading\">\n          {furtherReading.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={`ko/${data.enPost.post.slug}`}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Press Releases\" url=\"/categories/press-release\">\n          {pressRelease.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={`ko/${data.enPost.post.slug}`}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Technology\" url=\"/categories/technology\">\n          {technology.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={`ko/${data.enPost.post.slug}`}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Use Cases\" url=\"/categories/use-case\">\n          {useCase.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={`ko/${data.enPost.post.slug}`}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n      </FeaturedRow>\n      <div />\n    </Grid>\n  )\n}\n\nconst Grid = styled.div`\n  ${media.tablet`  display: grid;\n  grid-template-columns: 10vw 80vw 10vw;\n  column-gap: ${setRem(5)};`};\n`\n\nconst FeaturedRow = styled.div`\n  padding: 0 2vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  h1 {\n    text-align: center;\n    margin: 20px 0;\n    ${setFont}\n    font-size: ${setRem(38)};\n    color: ${setColor.mainBlack};\n  }\n`\n\nconst Title = styled.div`\n  border-top: 3px solid ${setColor.mainBlack};\n  margin-top: ${setRem(40)};\n  ${media.tablet`\n    border-top: 3px solid ${setColor.mainBlack}; \n    width: 5vw;\n    margin-top: ${setRem(80)};`};\n`\n\nexport default Posts\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Posts from \"../components/KoPosts\"\nimport SEO from \"../components/Globals/SEO\"\n\nexport default () => (\n  <Layout>\n    <SEO\n      title=\"Home\"\n      language=\"en\"\n      description=\"Our blog provides the latest information about the MXC Foundation, the MXC token, and relevant industry news regarding blockchain and the internet of things (IoT).\"\n      enPost=\"https://blog.mxc.org\"\n      koPost=\"https://blog.mxc.org/ko\"\n      hansPost=\"https://blog.mxc.org/zh-hans\"\n      hantPost=\"https://blog.mxc.org/zh-hant\"\n    />\n    <Posts />\n  </Layout>\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"Categories-module--show--3O9Tu\",\"hide\":\"Categories-module--hide--2KBxy\"};","import styled from \"styled-components\"\nimport { setRem } from \"../../styles\"\n\nconst Section = styled.section`\n  padding: ${setRem(28)} 0;\n  background: ${props => props.color};\n  a {\n    text-decoration: none;\n  }\n`\n\nexport default Section\n"],"sourceRoot":""}