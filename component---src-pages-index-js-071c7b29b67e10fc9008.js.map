{"version":3,"sources":["webpack:///./src/components/Globals/DisplayImage.js","webpack:///./src/components/Globals/PostRow.js","webpack:///./src/components/Categories.js","webpack:///./src/components/Globals/Title.js","webpack:///./src/components/Posts.js","webpack:///./src/pages/index.js","webpack:///./src/components/Globals/Category.js","webpack:///./src/components/Categories.module.css","webpack:///./src/components/Globals/Section.js"],"names":["styled","className","img","data","width","fluid","defaultImg","childImageSharp","props","Center","div","setColor","mainBlack","setRem","media","laptop","setBorder","color","primaryColor","imageWidth","Category","mainGrey","Date","PostRow","text","heading","image","slug","featured","category","date","Section","to","Title","title","FlexBox","setFlex","MobileMenu","button","tablet","StyledMenu","ul","secondaryColor","MenuItem","li","Categories","links","useState","isOpen","setNav","url","window","location","href","type","onClick","styles","show","hide","categories","nodes","map","item","index","catList","includes","koCategory","zhchCategory","zhtwCategory","catSlug","key","align","setLetterSpacing","setFont","main","Grid","FeaturedRow","Posts","newsUpdate","events","furtherReading","technology","pressRelease","file","useCase","id","post","metaDescription","featuredImage","undefined","Line","lightGrey","Layout","SEO","language","description","enPost","koPost","hansPost","hantPost","Cat","More","setTransition","children","module","exports","section"],"mappings":"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","file":"component---src-pages-index-js-071c7b29b67e10fc9008.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport Img from \"gatsby-image\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst getImage = graphql`\n  {\n    defaultImg: file(relativePath: { eq: \"defaultImg.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_withWebp_tracedSVG\n        }\n      }\n    }\n  }\n`\n\nconst DisplayImage = ({ className, img, width }) => {\n  const data = useStaticQuery(getImage)\n\n  return (\n    <Img\n      fluid={img || data.defaultImg.childImageSharp.fluid}\n      className={className}\n    />\n  )\n}\n\nexport default styled(DisplayImage)`\n  width: ${props => props.width};\n  min-height:100%;\n`\n","import React from \"react\"\nimport Section from \"./Section\"\nimport Title from \"./Title\"\nimport { Link } from \"gatsby\"\nimport {\n  setRem,\n  setBorder,\n  setColor,\n  media,\n} from \"../../styles\"\nimport styled from \"styled-components\"\nimport DisplayImage from \"./DisplayImage\"\n\nconst PostRow = ({ text, heading, image, slug, featured, category, date }) => {\n  return (\n    <Section>\n      <Link to={`/${slug}`}>\n        <Center imageWidth={featured ? `50vw` : `25vw`}>\n          <DisplayImage className=\"img\" img={image} />\n\n          <div className=\"info\">\n            <Title\n              title={heading}\n              className={featured ? `featured` : \"normal\"}\n            />\n            <p>{text}</p>\n            <Category>{featured ? `${category}` : null}</Category>\n            <Date>{date}</Date>\n          </div>\n        </Center>\n      </Link>\n    </Section>\n  )\n}\n\nconst Center = styled.div`\n  h3 {\n    color: ${setColor.mainBlack};\n  }\n  .img,\n  .info {\n    padding: ${setRem(15)};\n    ${media.laptop`\n       padding: ${setRem(30)};`}\n  }\n  .img {\n    display: block;\n    ${setBorder({ width: setRem(0), color: setColor.primaryColor })}\n  }\n  .featured {\n    margin-bottom: ${setRem(30)};\n    ${media.laptop`margin-bottom: ${setRem(76)};`}\n  }\n  .normal {\n    margin-bottom: ${setRem(20)};\n    font-size: ${setRem(24)};\n  }\n  .info {\n    p {\n      line-height: 20px;\n      font-size: ${setRem(16)};\n      color: ${setColor.mainBlack};\n    }\n  }\n  width: 90vw;\n  margin: 0 auto;\n\n  ${media.laptop`\n  width: 100vw;\n  max-width: ${setRem(1170)};\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-column-gap: ${setRem(32)};\n  .img {\n    align-self: center;\n    width: ${props => props.imageWidth};\n  }\n  .info {\n\n  }\n  a {\n    text-decoration: none;\n  }\n  ]\n  `}\n`\nexport const Category = styled.div`\n  color: ${setColor.mainGrey};\n  font-size: ${setRem(16)};\n  font-weight: 700;\n  margin-top: ${setRem(44)};\n  ${media.laptop``}\n`\n\nexport const Date = styled.div`\n  font-size: ${setRem(14)};\n  color: ${setColor.mainGrey};\n`\n\nexport default PostRow\n","import React, { useState } from \"react\"\nimport styled from \"styled-components\"\nimport { media, setColor, setRem, setFlex } from \"../styles\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { FaAngleDown } from \"react-icons/fa\"\nimport styles from \"./Categories.module.css\"\nimport { Link } from \"gatsby\"\n\nconst Categories = () => {\n  const links = useStaticQuery(getCategories)\n\n  const [isOpen, setNav] = useState(false)\n  const toggleNav = () => {\n    setNav(isOpen => !isOpen)\n  }\n  const url = typeof window !== `undefined` ? window.location.href : \"/\"\n\n  return (\n    <div>\n      <FlexBox>\n        <MobileMenu type=\"button\" onClick={toggleNav}>\n          Categories <FaAngleDown />\n        </MobileMenu>\n      </FlexBox>\n      <StyledMenu className={isOpen ? `${styles.show}` : `${styles.hide}`}>\n        {links.categories.nodes.map((item, index) => {\n          const catList = url.includes(\"/ko\")\n            ? item.koCategory\n            : url.includes(\"/zh-hans\")\n            ? item.zhchCategory\n            : url.includes(\"/zh-hant\")\n            ? item.zhtwCategory\n            : item.category\n          const catSlug = `categories/${item.slug}`\n          return (\n            <MenuItem key={index}>\n              <Link to={`${catSlug}`}>{catList}</Link>\n            </MenuItem>\n          )\n        })}\n      </StyledMenu>\n    </div>\n  )\n}\n\nexport const FlexBox = styled.div`\n  ${setFlex}\n`\n\nexport const MobileMenu = styled.button`\n  color: ${setColor.mainBlack};\n  background-color: transparent;\n  margin-top: 1rem;\n  border: none;\n  outline: none;\n  font-size: ${setRem(14)};\n  order: 99;\n  cursor: pointer;\n  ${media.tablet`display:none;`};\n`\n\nexport const StyledMenu = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 3rem 0 0 0;\n  align-items: center;\n  padding: 0;\n  justify-content: flex-start;\n  flex: 4;\n  font-weight: 500;\n  flex-direction: column;\n  height: 0;\n  overflow: hidden;\n  transition: all 0.3s linear;\n  a {\n    text-decoration: none;\n    color: ${setColor.mainBlack};\n  }\n  a:hover {\n    text-decoration: none;\n    color: ${setColor.secondaryColor};\n  }\n  ${media.tablet`\n\tflex-direction:row;\n\theight: auto;\n\tmargin: 0 0 0 0;\n\t`};\n`\nexport const MenuItem = styled.li`\n  padding: 1rem 2rem;\n`\nconst getCategories = graphql`\n  query {\n    categories: allStrapiCategories {\n      nodes {\n        slug\n        category\n        zhtwCategory\n        zhtwSlug\n        koCategory\n        koSlug\n        zhchCategory\n        zhchSlug\n      }\n    }\n  }\n`\n\nexport default Categories\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { setRem, setFont, setLetterSpacing } from \"../../styles\"\n\nconst Title = ({ className, title, align }) => {\n  return <h3 className={className}>{title}</h3>\n}\n\nexport default styled(Title)`\n  font-size: ${setRem(32)};\n  text-transform: capitalize;\n  ${setLetterSpacing(3)};\n  ${setFont.main};\n  text-align: ${props => props.align || \"left\"};\n`\n","import React from \"react\"\nimport { setColor, setRem, setFont, media } from \"../styles\"\nimport styled from \"styled-components\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Line from \"./Globals/Line\"\nimport Categories from \"./Categories\"\nimport PostRow from \"./Globals/PostRow\"\nimport Category from \"./Globals/Category\"\n\nconst Posts = () => {\n  const {\n    newsUpdate: { nodes: newsUpdate },\n    featured: { nodes: featured },\n    events: { nodes: events },\n    furtherReading: { nodes: furtherReading },\n    technology: { nodes: technology },\n    pressRelease: { nodes: pressRelease },\n    file: { childImageSharp: file },\n    useCase: { nodes: useCase },\n  } = useStaticQuery(getPosts)\n\n  return (\n    <Grid>\n      <div />\n      <FeaturedRow>\n        <Title>\n          <h1>Blog</h1>\n        </Title>\n        <Categories />\n        {featured.map(item => {\n          return (\n            <div key={item.id}>\n              <PostRow\n                heading={item.title}\n                text={item.post.metaDescription}\n                slug={item.post.slug}\n                image={\n                  item.featuredImage === null\n                  ? file.fluid :\n                  item.featuredImage === undefined ?\n                  file.fluid :\n                  item.featuredImage.childImageSharp.fluid\n                }\n                category={item.category.category}\n                date={item.date}\n                featured\n              />\n              <Line color={setColor.lightGrey} />\n            </div>\n          )\n        })}\n        <Category category=\"News Update\" url={`/categories/news-update`}>\n          {newsUpdate.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={data.post.slug}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Events\" url={`/categories/events`}>\n          {events.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={data.post.slug}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category\n          category=\"Further Reading\"\n          url={`/categories/further-reading`}\n        >\n          {furtherReading.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={data.post.slug}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Press Releases\" url={`/categories/press-release`}>\n          {pressRelease.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={data.post.slug}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Technology\" url={`/categories/technology`}>\n          {technology.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={data.post.slug}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n        <Category category=\"Use Cases\" url={`/categories/use-case`}>\n          {useCase.map(data => {\n            return (\n              <div key={data.id}>\n                <PostRow\n                  heading={data.title}\n                  text={data.post.metaDescription}\n                  slug={data.post.slug}\n                  date={data.date}\n                  image={\n                    data.featuredImage !== null\n                      ? data.featuredImage.childImageSharp.fluid\n                      : file.fluid\n                  }\n                />\n                <Line color={setColor.lightGrey} />\n              </div>\n            )\n          })}\n        </Category>\n      </FeaturedRow>\n      <div />\n    </Grid>\n  )\n}\n\nconst Grid = styled.div`\n  ${media.tablet`  display: grid;\n  grid-template-columns: 10vw 80vw 10vw;\n  column-gap: ${setRem(5)};`};\n`\n\nconst FeaturedRow = styled.div`\n  padding: 0 2vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items:center;\n  h1 {\n    text-align: center;\n    margin: 20px 0;\n    ${setFont}\n    font-size: ${setRem(38)};\n    color: ${setColor.mainBlack};\n  }\n`\n\nconst Title = styled.div`\n  border-top: 3px solid ${setColor.mainBlack};\n  margin-top: ${setRem(40)};\n  ${media.tablet`\n    border-top: 3px solid ${setColor.mainBlack}; \n    width: 5vw;\n    margin-top: ${setRem(80)};`};\n`\nconst getPosts = graphql`\n  {\n    featured: allStrapiPosts(\n      sort: { order: DESC, fields: post___date }\n      filter: { post: { featured: { eq: true }, publish: { eq: true } } }\n    ) {\n      nodes {\n        id\n        date(formatString: \"MMMM DD, YYYY\")\n        author {\n          author\n          slug\n        }\n        category {\n          category\n          slug\n        }\n        post {\n          date(formatString: \"MMMM DD, YYYY\")\n          metaDescription\n          featured\n          publish\n          slug\n          video\n        }\n        tags {\n          tag\n          slug\n        }\n        title\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    newsUpdate: allStrapiPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { category: { slug: { eq: \"news-update\" } } }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        id\n      }\n    }\n    events: allStrapiPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { category: { slug: { eq: \"events\" } } }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        id\n      }\n    }\n    furtherReading: allStrapiPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { category: { slug: { eq: \"further-reading\" } } }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        id\n      }\n    }\n    technology: allStrapiPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { category: { slug: { eq: \"technology\" } } }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        id\n      }\n    }\n    pressRelease: allStrapiPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { category: { slug: { eq: \"press-release\" } } }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        id\n      }\n    }\n    useCase: allStrapiPosts(\n      sort: { fields: date, order: DESC }\n      limit: 5\n      filter: { category: { slug: { eq: \"use-case\" } } }\n    ) {\n      nodes {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        featuredImage {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_withWebp_tracedSVG\n            }\n          }\n        }\n        category {\n          category\n        }\n        post {\n          metaDescription\n          slug\n        }\n        id\n      }\n    }\n    categoriesPost: allStrapiCategories {\n      nodes {\n        category\n        slug\n      }\n    }\n    file(relativePath: { eq: \"defaultImg.png\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_withWebp_tracedSVG\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n","import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport Posts from \"../components/Posts\"\nimport SEO from '../components/Globals/SEO'\n\nexport default () => (\n  <Layout>\n    <SEO \n    title=\"Home\" \n    language=\"en\" \n    description=\"Our blog provides the latest information about the MXC Foundation, the MXC token, and relevant industry news regarding blockchain and the internet of things (IoT).\" \n    enPost=\"https://blog.mxc.org\"\n    koPost=\"https://blog.mxc.org/ko\" \n    hansPost=\"https://blog.mxc.org/zh-hans\" \n    hantPost=\"https://blog.mxc.org/zh-hant\"/>\n    <Posts />\n  </Layout>\n)\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { FaChevronRight } from \"react-icons/fa\"\nimport Section from \"./Section\"\nimport Title from \"./Title\"\nimport { Link } from \"gatsby\"\nimport { setRem, setColor, setTransition, media } from \"../../styles\"\n\nconst Category = ({ children, category, url }) => {\n  return (\n    <Section>\n      <Cat>\n        <Title title={category} />\n\n        <More>\n          <Link to={url} className=\"button\">\n            <p>See more in {category}</p>\n            <FaChevronRight className=\"icon\" />\n          </Link>\n        </More>\n      </Cat>\n      {children}\n    </Section>\n  )\n}\n\nexport const Cat = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: ${setRem(30)};\n  ${media.laptop`flex-direction: row;`}\n`\nexport const More = styled.div`\n  .button {\n    display: flex;\n    flex-direction: row;\n    color: ${setColor.mainBlack};\n  }\n  .button:hover {\n    color: ${setColor.secondaryColor};\n    ${setTransition}\n  }\n  .icon {\n    padding-left: ${setRem(10)};\n  }\n`\n\nexport default Category\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"show\":\"Categories-module--show--3O9Tu\",\"hide\":\"Categories-module--hide--2KBxy\"};","import styled from \"styled-components\"\nimport { setRem } from \"../../styles\"\n\nconst Section = styled.section`\n  padding: ${setRem(28)} 0;\n  background: ${props => props.color};\n  a {\n    text-decoration: none;\n    \n  }\n`\n\nexport default Section\n"],"sourceRoot":""}